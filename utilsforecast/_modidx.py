# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/utilsforecast',
                'doc_host': 'https://Nixtla.github.io',
                'git_url': 'https://github.com/Nixtla/utilsforecast',
                'lib_path': 'utilsforecast'},
  'syms': { 'utilsforecast.compat': {},
            'utilsforecast.core': {'utilsforecast.core.foo': ('core.html#foo', 'utilsforecast/core.py')},
            'utilsforecast.data': {'utilsforecast.data.generate_series': ('data.html#generate_series', 'utilsforecast/data.py')},
            'utilsforecast.grouped_array': { 'utilsforecast.grouped_array.GroupedArray': ( 'grouped_array.html#groupedarray',
                                                                                           'utilsforecast/grouped_array.py'),
                                             'utilsforecast.grouped_array.GroupedArray.__init__': ( 'grouped_array.html#groupedarray.__init__',
                                                                                                    'utilsforecast/grouped_array.py')},
            'utilsforecast.plotting': { 'utilsforecast.plotting._parse_ds_type': ( 'plotting.html#_parse_ds_type',
                                                                                   'utilsforecast/plotting.py'),
                                        'utilsforecast.plotting.plot': ('plotting.html#plot', 'utilsforecast/plotting.py')},
            'utilsforecast.preprocessing': { 'utilsforecast.preprocessing._determine_bound': ( 'preprocessing.html#_determine_bound',
                                                                                               'utilsforecast/preprocessing.py'),
                                             'utilsforecast.preprocessing.fill_gaps': ( 'preprocessing.html#fill_gaps',
                                                                                        'utilsforecast/preprocessing.py')},
            'utilsforecast.processing': { 'utilsforecast.processing.DataFrameProcessing': ( 'processing.html#dataframeprocessing',
                                                                                            'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing.__call__': ( 'processing.html#dataframeprocessing.__call__',
                                                                                                     'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing.__init__': ( 'processing.html#dataframeprocessing.__init__',
                                                                                                     'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing._check_datetime': ( 'processing.html#dataframeprocessing._check_datetime',
                                                                                                            'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing._partial_val_df': ( 'processing.html#dataframeprocessing._partial_val_df',
                                                                                                            'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing._to_np_and_engine': ( 'processing.html#dataframeprocessing._to_np_and_engine',
                                                                                                              'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing._validate_dataframe': ( 'processing.html#dataframeprocessing._validate_dataframe',
                                                                                                                'utilsforecast/processing.py'),
                                          'utilsforecast.processing.DataFrameProcessing.grouped_array': ( 'processing.html#dataframeprocessing.grouped_array',
                                                                                                          'utilsforecast/processing.py')}}}
