name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  all-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the library
        run: pip install uv && uv pip install --system ".[dev]" fugue[dask,spark]>=0.8.1

      - name: Run tests
        run: nbdev_test --do_print --timing --flags 'datasets distributed matplotlib polars pyarrow scipy'

  windows-tests:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the library
        run: pip install uv && uv pip install --system ".[dev]"

      - name: Run tests
        run: nbdev_test --do_print --timing --flags 'datasets matplotlib polars pyarrow scipy'

  minimal-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Clone repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        shell: bash
        run: pip3 install . nbdev

      - name: Run tests
        shell: bash
        run: nbdev_test --do_print --timing --skip_file_re 'plotting'
